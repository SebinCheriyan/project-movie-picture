name: Frontend Continuous Deployment

on:
  # push: #To run run on push event to the main brach where there is code change in frontend folder.
  #   branches:
  #     - main
  #   paths:
  #     - 'starter/frontend/**'
  workflow_dispatch:  # Allows manual execution

  # ECR repository urls are stored as enviroment variables (PROD) along with region and backend url. AWS secrets are also stored in the same PROD env.
jobs:
  build:
    name: Build and Push Frontend Image
    environment: PROD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.FRONTEND_ECR_REPOSITORY }}

      - name: Build and Push Docker Image
        run: |
          cd starter/frontend
          docker build --build-arg REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }} --tag ${{ vars.FRONTEND_ECR_REPOSITORY }}:${{ github.sha }} .
          docker push ${{ vars.FRONTEND_ECR_REPOSITORY }}:${{ github.sha }}

  deploy:
    name: Deploy to Kubernetes
    environment: PROD
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name cluster

      - name: Update Image Tag in Kustomize
        run: |
          cd starter/frontend/k8s
          kustomize edit set image frontend=${{ vars.FRONTEND_ECR_REPOSITORY }}:${{ github.sha }}
          kustomize build | kubectl apply -f -
