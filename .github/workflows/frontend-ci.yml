name: Frontend Continuous Integration

on:
  pull_request: #To run on pull_request to the main brach where there is code change in frontend folder.
    branches:
      - main
    paths:
      - 'starter/frontend/**' #Trigger only when there is change in frontend dirctory.

  workflow_dispatch: #To run manually

jobs:
  lint:
    name: Run Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm' #Cache action to restore cache before dependency install. This will speed up the workflow execution.
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install Dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: Run ESLint
        run: |
          cd starter/frontend
          npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm' #Cache action to restore cache before dependency install. This will speed up the workflow execution.
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install Dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: Run Tests
        run: |
          cd starter/frontend
          CI=true npm test

  build:
    name: Build Frontend Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]  # Run only if lint and test steps pass
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          cd starter/frontend
          docker build --build-arg REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag mp-frontend:latest .
